import cv2import numpy as npimport matplotlib.pyplot as plt'''Abuzar Nur - FYP 2018 - Video Testing'''green_average = list()frames = 0cap = cv2.VideoCapture('vid3.mov')NoF = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))print(NoF)fps = int(cap.get(cv2.CAP_PROP_FPS))# Create the haar cascadefaceCascade = cv2.CascadeClassifier("haarcascade_frontalface_default.xml") #high accuracy/slow# faceCascade = cv2.CascadeClassifier("lbpcascade_frontalface.xml") #fasterwhile(True):	# Capture frame-by-frame	ret, frame = cap.read()	if ret:		frames = frames + 1		print(frames)		# Our operations on the frame come here		gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)		# Detect faces in the image		faces = faceCascade.detectMultiScale(			gray,			scaleFactor=1.1,			minNeighbors=5,			minSize=(20, 20),			flags = cv2.CASCADE_SCALE_IMAGE		)		area = list()		if np.ndim(faces) > 1:			for (x, y, w, h) in faces:				area.append(w*h)			area_max = max(area)			area_index = area.index(area_max)			face = faces[area_index]		else:			print(faces)			face = faces[0]		x_scale = 0.19		x_centre = round(face[0] + face[2] / 2)		x_left = round(x_centre - face[2] * x_scale)		x_right = round(x_centre + face[2] * x_scale)		y_scale = 0.062		y_centre = round(face[1] + face[3] / 2)		y_centre = round(y_centre - face[3] * 0.35)		y_top = round(y_centre - face[2] * y_scale)		y_bottom = round(y_centre + face[2] * y_scale)		ROI = [[int(x_left), int(y_top), int(x_right - x_left), int(y_bottom - y_top)]]		# Draw a rectangle around the faces		for (x, y, w, h) in ROI:			cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)			green = frame[x:x+w+1,y:y+h+1,1]		green_average.append(int(round(np.mean(green))))		# Display the resulting frame		# cv2.imshow("frame", frame)		# cv2.waitKey(0)		if cv2.waitKey(1) & 0xFF == ord('q') or frames == NoF:			# When everything done, release the capture			cap.release()			cv2.destroyAllWindows()			breakplt.figure()plt.plot(np.arange(0, frames, 1), green_average)plt.show()input("\nPRESS RETURN TO EXIT\n")